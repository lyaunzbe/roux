{
  "name": "errorify",
  "version": "0.2.4",
  "description": "Browserify plugin to write failed build error messages to the output file",
  "keywords": [
    "build",
    "browserify",
    "browserify-plugin"
  ],
  "homepage": "https://github.com/zertosh/errorify",
  "licence": "MIT",
  "author": {
    "name": "Andres Suarez",
    "email": "zertosh@gmail.com"
  },
  "files": [
    "README.md",
    "errorify.js"
  ],
  "main": "errorify.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/zertosh/errorify.git"
  },
  "scripts": {
    "test": "tape test/**/*-test.js"
  },
  "dependencies": {
    "through2": "^0.6.3"
  },
  "devDependencies": {
    "browserify": "^9.0.3",
    "concat-stream": "^1.4.7",
    "tape": "^3.5.0"
  },
  "readme": "# errorify\n\nA [browserify](https://github.com/substack/node-browserify) plugin that writes the error message of a failed build to the output file, rendering it in the browser.\n\nExample: \n\n```sh\nwatchify index.js -o bundle.js -p errorify\n```\n\nAfter adding the plugin to your `browserify` instance, `errorify` prevents `bundle()` from emitting `error`'s. All errors are trapped, including: invalid syntax in the source, a missing dependency, a failed transform, etc. When the error message is written to the output file, it is written to the DOM in a `<pre>` tag (or `console.error` if we are not in a browser environment). \n\nDuring development, it might look like this: \n\n![es6](http://i.imgur.com/Pen6bYu.png)\n\nOnly the `bundle()` stream is rewritten. If you pass in a callback, it'll get the expected `err` and `body` arguments.\n\n`errorify` is meant to be used with something like [watchify](https://github.com/substack/watchify). It saves you a trip to the terminal to see why a build failed.\n\nKeep in mind that since errors are no longer emitted, all builds appear \"successful\". Careful not to deploy broken code.\n\n_Note: Only tested with Browserify 9+_\n\n## Usage\n\n### API\n\n```js\nvar browserify = require('browserify');\nvar errorify = require('errorify');\nvar b = browserify({ /* stuff */ });\nb.plugin(errorify);\n```\n\n### CLI\n\nAfter installing `errorify` as a local devDependency, you can use the `--plugin` or `-p` option like so:\n\n```sh\nwatchify index.js -o bundle.js -p errorify\n```\n\n### CSS Customization\n\nThe added `<pre>` tag has the class name `errorify`, so you can customize errors in your page like so:\n\n```css\nbody > .errorify {\n  color: red;\n  font-family: 'Consolas', monospace;\n  padding: 5px 10px;\n}\n```\n\n## License\n\nMIT. See [LICENSE](LICENSE) for details.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/zertosh/errorify/issues"
  },
  "_id": "errorify@0.2.4",
  "_from": "errorify@^0.2.4"
}
