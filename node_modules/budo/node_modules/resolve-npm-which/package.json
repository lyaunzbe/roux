{
  "name": "resolve-npm-which",
  "version": "1.0.1",
  "description": "finds the user's path for a module like browserify",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {
    "dezalgo": "^1.0.1",
    "npm-which": "^2.0.0",
    "resolve": "^1.1.6"
  },
  "devDependencies": {
    "npmconf": "^2.1.1",
    "tape": "^4.0.0",
    "watchify": "^3.1.0"
  },
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "find",
    "package",
    "root",
    "module",
    "bin",
    "local",
    "global",
    "which",
    "npm-which",
    "globals",
    "resolve",
    "require.resolve",
    "parent",
    "config"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/resolve-npm-which.git"
  },
  "homepage": "https://github.com/mattdesl/resolve-npm-which",
  "bugs": {
    "url": "https://github.com/mattdesl/resolve-npm-which/issues"
  },
  "readme": "# resolve-npm-which\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nFor a CLI module like `\"browserify\"` or `\"watchify\"`, resolves to the path for that module in local or global installs.\n\n```js\nvar find = require('resolve-npm-which')\n\nfind('browserify', {\n  basedir: process.cwd()\n}, function(err, file) {\n  if (err) throw err\n  \n  // now require it !\n  var browserify = require(file)\n})\n```\n\nFirst it will use the [resolve](https://www.npmjs.com/package/resolve) algorithm to look through locals, and then it will fall back to [npm-which](https://www.npmjs.com/package/npm-which) to look through globals.\n\nThe callback provides the path to the module so that it can be required.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/resolve-npm-which.png)](https://www.npmjs.com/package/resolve-npm-which)\n\n#### `find(name, opt, cb)`\n\nFinds the module `name` with the given options (passed to [resolve](https://www.npmjs.com/package/resolve)), then calls `cb` with the error/success state. \n\nOptions must include `basedir` to search for.\n\n## Test\n\nNote: To test, you need to have `browserify` installed gobally, and `npm config get prefix` should return a meaningful value.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/mattdesl/resolve-npm-which/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "resolve-npm-which@1.0.1",
  "_from": "resolve-npm-which@^1.0.1"
}
