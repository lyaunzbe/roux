{
  "name": "is-webgl-context",
  "version": "1.0.0",
  "description": "whether the given object is a WebGL context",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {},
  "devDependencies": {
    "tape": "^3.0.0",
    "webgl-context": "^1.2.1"
  },
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "is",
    "webgl",
    "gl",
    "glsl",
    "shader",
    "context",
    "ctx",
    "experimental-webgl"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/is-webgl-context.git"
  },
  "homepage": "https://github.com/mattdesl/is-webgl-context",
  "bugs": {
    "url": "https://github.com/mattdesl/is-webgl-context/issues"
  },
  "readme": "# is-webgl-context\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nTest whether the given object is a WebGL context. This is useful to handle edge-cases, such as when [Chrome WebGL Inspector](https://chrome.google.com/webstore/detail/webgl-inspector/ogkcjmbhnfmlnielkjhedpcjomeaghda?hl=en) wraps WebGLRenderingContext in a different type. \n\n```js\nvar isGL = require('is-webgl-context')\n\nisGL(foo)\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/is-webgl-context.png)](https://nodei.co/npm/is-webgl-context/)\n\n#### `isGLContext(obj)`\n\nReturns true if the object is an instance of WebGLRenderingContext, handling edge cases for WebGL debuggers/inspectors. \n\n## License\n\nMIT, see [LICENSE.md](http://github.com/mattdesl/is-webgl-context/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "is-webgl-context@1.0.0",
  "dist": {
    "shasum": "abc109fa7098ef89f4ee44cee0ea71510438a1bd"
  },
  "_from": "is-webgl-context@^1.0.0",
  "_resolved": "https://registry.npmjs.org/is-webgl-context/-/is-webgl-context-1.0.0.tgz"
}
