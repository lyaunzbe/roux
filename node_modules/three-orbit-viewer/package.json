{
  "name": "three-orbit-viewer",
  "version": "69.3.0",
  "description": "quick harness for viewing a mesh with orbit viewer",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {
    "as-number": "^1.0.0",
    "canvas-app": "^2.4.0",
    "events": "^1.0.2",
    "three-orbit-controls": "~0.69.0",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "browserify": "^8.1.0",
    "domready": "^1.0.7",
    "eases": "^1.0.2",
    "three": "^0.70.0",
    "uglify-js": "^2.4.16",
    "wzrd": "^1.2.1"
  },
  "scripts": {
    "start": "wzrd demo/test.js:bundle.js",
    "build": "browserify demo/test.js | uglifyjs -cm > demo/bundle.js"
  },
  "keywords": [
    "orbit",
    "viewer",
    "three",
    "js"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/Jam3/three-orbit-viewer.git"
  },
  "homepage": "https://github.com/Jam3/three-orbit-viewer",
  "bugs": {
    "url": "https://github.com/Jam3/three-orbit-viewer/issues"
  },
  "readme": "# three-orbit-viewer\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\n[(click for demo)](http://Jam3.github.io/three-orbit-viewer/demo/)\n\nQuick harness to create a runnable demo for ThreeJS scenes. For a demo, see [demo/test.js](demo/test.js) or [three-gl-state-example](https://github.com/mattdesl/three-gl-state-example).\n\n```js\nvar createOrbitViewer = require('three-orbit-viewer')(THREE)\n\nvar app = createOrbitViewer({\n    clearColor: 0x000000,\n    clearAlpha: 1.0,\n    fov: 65,\n    position: new THREE.Vector3(1, 1, -2)\n})\n\nvar geo = new THREE.BoxGeometry(1,1,1)\nvar mat = new THREE.MeshBasicMaterial({ wireframe: true, color: 0xffffff })\nvar box = new THREE.Mesh(geo, mat)\napp.scene.add(box)\n\napp.on('tick', function(dt) {\n    //.. handle pre-render updates    \n})\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/three-orbit-viewer.png)](https://nodei.co/npm/three-orbit-viewer/)\n\n#### `viewer = createViewer(THREE)([options])`\n\nThis module exports a function which accepts the THREE instance, and returns a new function which creates the orbit viewer with the specified options. \n\n- `fov` field of view, defaults to 50\n- `near` the near z depth for the camera, defaults to 0.1\n- `far` the far z depth for the camera, defaults to 1000\n- `clearColor` the THREE.Color or hex code, default black\n- `clearAlpha` the alpha, default 0\n- `position` THREE.Vector3 for the initial camera position, defaults to [1, 1, -2]\n- `target` THREE.Vector3 for the initial orbit controller's target\n- other options that could be passed into [canvas-app](https://www.npmjs.org/package/canvas-app)\n\n#### `viewer.on('tick')`\n\nListens for tick events before render, dispatched with `dt` as the first and only parameter. Alternatively, you can use `on('render')` for events called after the renderer has finished.\n\n#### `viewer.on('resize')`\n\nListens for resize events, dispatched with `width, height` as parameters. Camera aspect, renderer viewport, and canvas retina scaling is already taken into account.\n\n#### `viewer.renderer`\n\nInstance of THREE.WebGLRenderer\n\n#### `viewer.scene`\n\nInstance of THREE.Scene\n\n#### `viewer.camera`\n\nInstance of THREE.PerspectiveCamera\n\n#### `viewer.controller`\n\nInstance of [three-orbit-controller](https://www.npmjs.org/package/three-orbit-controller).\n\n#### `viewer.engine`\n\nInstance of [canvas-app](https://www.npmjs.org/package/canvas-app) which you can call `stop()` and `start()` on, or access for current width/height/fps/etc.\n\n## Running the Demo\n\nTo build and run the demo, git clone this repo then:\n\n```sh\ncd three-orbit-viewer\nnpm install\nnpm test\n```\n\nAnd open `localhost:9966` in your browser.\n\n## Building / Testing\n\nTo build from source, git clone and `npm install` local dependencies, then run `npm start` to run a development server on `localhost:9966` or `npm run build` to create a compressed bundle of the [demo source](demo/test.js). \n\n## Versioning\n\nThis uses an unusual versioning system to better support ThreeJS's (lack of) versioning. The major version of this repo will line up with ThreeJS releases (`69.0.0` => `r69`). The minor will be reserved for any new features, and patch for bug fixes and documentation/readme updates. In some rare cases, a minor feature may introduce a breaking change; so it's generally safest to use tilde or `save-exact` for this module.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/Jam3/three-orbit-viewer/blob/master/LICENSE.md) for details.",
  "readmeFilename": "README.md",
  "_id": "three-orbit-viewer@69.3.0",
  "dist": {
    "shasum": "c2c2f235ca0bc1c5007a422cd43e4fef0cf2d459"
  },
  "_from": "three-orbit-viewer@^69.3.0",
  "_resolved": "https://registry.npmjs.org/three-orbit-viewer/-/three-orbit-viewer-69.3.0.tgz"
}
