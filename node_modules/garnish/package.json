{
  "name": "garnish",
  "version": "2.1.3",
  "description": "prettifies ndjson from wzrd and similar tools",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "bin": {
    "garnish": "./bin/cmd.js"
  },
  "dependencies": {
    "chalk": "^0.5.1",
    "duplexer": "^0.1.1",
    "minimist": "^1.1.0",
    "split2": "^0.2.1",
    "through2": "^0.6.3"
  },
  "devDependencies": {
    "browserify": "^8.1.3",
    "strip-ansi": "^2.0.1",
    "tape": "^3.5.0",
    "wzrd": "^1.2.1"
  },
  "scripts": {
    "test": "node test/test.js",
    "demo": "wzrd test/demo.js | node ./bin/cmd.js"
  },
  "keywords": [
    "prettify",
    "pretty",
    "print",
    "pretty-print",
    "ndjson",
    "bundle",
    "bundler",
    "browserify",
    "wzrd",
    "beefy",
    "wizz"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/garnish.git"
  },
  "homepage": "https://github.com/mattdesl/garnish",
  "bugs": {
    "url": "https://github.com/mattdesl/garnish/issues"
  },
  "readme": "# garnish\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\n![img](http://i.imgur.com/8OP1YPB.png)\n\nPrettifies [ndjson](http://ndjson.org/) or [bole](https://github.com/rvagg/bole) logs from [budo](https://github.com/mattdesl/budo), [wzrd](https://github.com/maxogden/wzrd/), [wtch](https://github.com/mattdesl/wtch) and other tools. Similar to [bistre](https://github.com/hughsk/bistre).\n\nInstall: \n\n```sh\nnpm install wzrd garnish --save-dev\n```\n\nThen in npm scripts:\n\n```json\n  \"scripts\": {\n    \"start\": \"wzrd index.js | garnish\"\n  }\n```\n\nThen `npm start` on your project to see it in action. \n\n## Usage\n\n[![NPM](https://nodei.co/npm/garnish.png)](https://www.npmjs.com/package/garnish)\n\n## CLI\n\n```sh\nwzrd index.js | garnish [opts]\n\nOptions:\n    \n    --level, -l    the minimum debug level, default 'info'\n    --verbose, -v  print all log levels\n```\n\nWhere `level` can be `debug`, `info`, `warn`, `error`.\n\nIf `--verbose` is specified, `--level` will be ignored.\n\n## API\n\n#### `garnish(opt)`\n\nReturns a duplexer that parses input as ndjson, and writes a pretty-printed result. Options:\n\n- `level` the minimum level to listen for, defaults to `\"info\"`\n\n\n## format\n\nPRs and suggestions welcome for other tools (Webpack? Watchify? Beefy? etc). Currently handles [bole](https://github.com/rvagg/bole) logs with some added flair for the following:\n\n```js\n//simple event\n{ type: 'generated', url: '/' }\n\n//timed event with type\n{ type: 'foo', url: '/blah.js', elapsed: '325ms' }\n```\n\nMessages with `url`, `type` and `elapsed` have a stronger emphasis, messages with just `url` and `type` will be dimmed. \n\nOther messages are printed gray, with the log name (if available) and level. \n\n## License\n\nMIT, see [LICENSE.md](http://github.com/mattdesl/garnish/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "garnish@2.1.3",
  "_from": "garnish@^2.1.3"
}
