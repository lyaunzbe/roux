{
  "name": "glslify-import",
  "version": "0.0.1",
  "description": "A transform stream for glslify that adds an `import` directive to your shaders.",
  "main": "index.js",
  "dependencies": {
    "map-stream": "0.0.3",
    "split": "~0.2.10",
    "stream-combiner": "0.0.2",
    "concat-stream": "~1.0.1",
    "glsl-deparser": "0.0.2",
    "graceful-fs": "~2.0.1",
    "glslify-stream": "0.0.1"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/glslify-import.git"
  },
  "keywords": [
    "glslify",
    "transform",
    "stream",
    "import",
    "include",
    "inline",
    "shaders"
  ],
  "bugs": {
    "url": "https://github.com/hughsk/glslify-import/issues"
  },
  "readme": "# glslify-import #\n\nA transform stream for [glslify](http://github.com/chrisdickinson/glslify)\nthat adds an `import` directive to your shaders.\n\n## Usage ##\n\nGiven a basic shader:\n\n``` glsl\n// main.frag\n#pragma import: ./common.glsl\n\nvoid main() {\n  gl_FragColor = vec4(color, 1.0);\n}\n```\n\nYou can import `./common.glsl`:\n\n``` glsl\n// common.glsl\nvarying vec3 color;\n```\n\nAnd have the contents inlined into your shader:\n\n``` glsl\nvarying vec3 color;\n\nvoid main() {\n  gl_FragColor = vec4(color, 1.0);\n}\n```\n\nYou can also use glslify pragmas and the like from your imported files as well.\nUseful for the cases when you want to include a common \"base\" set of\ndefinitions in your shaders without losing the niceties of glslify.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/hughsk/glslify-import",
  "_id": "glslify-import@0.0.1",
  "dist": {
    "shasum": "acb403a6e222e90febfe9fb1b82279fcd183f5eb"
  },
  "_from": "glslify-import@0.0.1",
  "_resolved": "https://registry.npmjs.org/glslify-import/-/glslify-import-0.0.1.tgz"
}
